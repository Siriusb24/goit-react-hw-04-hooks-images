{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/Searchbar/SearchBar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/Spinner/Spinner.js","services/apiServices.js","App.js","index.js"],"names":["module","exports","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","reset","className","s","Searchbar","SearchForm","event","preventDefault","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","name","autoFocus","placeholder","onChange","currentTarget","value","ImageGalleryItem","onItemClick","id","webformatURL","src","alt","ImageGalleryItem_image","onClick","modalContent","ImageGallery","images","e","target","map","image","modalRoot","document","getElementById","propTypes","onBackdrop","PropTypes","func","isRequired","content","string","Modal","createPortal","Overlay","Button","onPress","Spinner","color","height","width","fetchImages","page","a","axios","get","catch","error","console","data","App","setModalContent","setPage","visibleImages","setVisibleImages","isLoading","setIsLoading","openModal","setOpenModal","setError","useEffect","getData","toggleModal","toggleLoading","then","hits","log","window","scrollTo","top","documentElement","scrollHeight","behavior","finally","isNotLastPage","length","btnEnable","query","itemId","element","find","largeImageURL","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fe2e3629.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__1P7Nb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__24ERy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__LuSsJ\",\"SearchForm\":\"SearchBar_SearchForm__1OsD8\",\"SearchForm_button\":\"SearchBar_SearchForm_button__1J8k8\",\"SearchForm_button_label\":\"SearchBar_SearchForm_button_label__1ewgv\",\"SearchForm_input\":\"SearchBar_SearchForm_input__1BDSj\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './SearchBar.module.css';\n\nfunction SearchBar ({onSubmit}) {\n  \nconst [searchQuery, setSearchQuery] = useState('')\n\n  const handleChange = event => {\n    setSearchQuery(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(searchQuery);\n    reset()\n  };\n\n  const reset = () => {\n    setSearchQuery('');\n  };\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\n          <button type=\"submit\" className={s.SearchForm_button}>\n            <span className={s.SearchForm_button_label}>Search</span>\n          </button>\n          <input\n            className={s.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"searchQuery\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={handleChange}\n            value={searchQuery}\n          />\n        </form>\n      </header>\n    );\n}\n\nSearchBar.propTypes = { onSubmit: PropTypes.func };\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ onItemClick, id, webformatURL }) => {\n\nconst modalContent = id => {\n    onItemClick(id);\n  };\n\n    return (\n      <img\n        key={id}\n        src={webformatURL}\n        alt=\"\"\n        className={s.ImageGalleryItem_image}\n        onClick={() => modalContent(id)}\n      />\n    );\n}\n\n\nImageGalleryItem.propTypes = {\n  onItemClick: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst  ImageGallery = ({ images, onItemClick, onClick, id}) => {\n  const handleOpenModal = e => {\n    if (e.target !== e.currentTarget) {\n      onClick();\n    }\n  };\n  \n    return (\n      <ul className={s.ImageGallery} onClick={handleOpenModal}>\n        {images &&\n          images.map(image => (\n            <li key={image.id} className={s.ImageGalleryItem} >\n              <ImageGalleryItem {...image} onItemClick={onItemClick} />\n            </li>\n          ))}\n      </ul>\n    );\n}\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onItemClick: PropTypes.func.isRequired,\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ onBackdrop, content }) => {\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onBackdrop();\n    }\n  };\n    return createPortal(\n      <div className={s.Overlay} onClick={handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={content} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n}\n\nmodalRoot.propTypes = {\n  onBackdrop: PropTypes.func.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onPress, name }) => {\n  \n    return (\n      <button type=\"button\" onClick={onPress} className={s.Button}>\n          {name}\n      </button>\n    );\n};\n\n\nButton.propTypes = {\n  name: PropTypes.string,\n  onPress: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport s from './Spinner.module.css';\n\nconst Spinner = () => {\n    return (\n      <div className={s.Spinner}>\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\n      </div>\n    );\n}\n\nexport default Spinner;\n","import axios from 'axios';\n\nconst api = '16865907-bf97a2667d97724c7c41d2d46';\nconst url = 'https://pixabay.com/api/?';\n\nconst fetchImages = async (searchQuery, page) => {\n\n\n  const { data } = await axios.get(`${url}q=${searchQuery}&page=${page}&key=${api}&image_type=photo&orientation=horizontal&per_page=12`).catch(error => console.error('Smth went wrong'));\n  return data;\n};\n\nexport default fetchImages;\n","import React, { useState, useEffect } from 'react';\n\nimport SearchBar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport Button from './components/Button/Button';\nimport Spinner from './components/Spinner/Spinner';\nimport fetchImages from './services/apiServices';\nimport './App.css';\n\nfunction App () {\n  const [modalContent, setModalContent] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [visibleImages, setVisibleImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [id, setId] = useState('');\n  \n\n  useEffect(() => {\n    \n    if (searchQuery !== '' && page !== 0) {\n     getData();\n    }\n\n    }, [searchQuery, page]);// eslint-disable-line react-hooks/exhaustive-deps\n  \n\n  const toggleModal = () => {\n    setOpenModal(openModal => !openModal);\n  };\n\n  const toggleLoading = () => {\n    setIsLoading(isLoading => !isLoading);\n  };\n\n  const hadleChangeQuery = query => {\n    if (query === searchQuery) {\n      return;\n    }\n    setSearchQuery(query);\n    setVisibleImages([]);\n    setPage(1);\n  };\n\n  const handleNextPage = () => {\n    setPage(page => page+1)\n  };\n\n  const handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const modalContentSet = itemId => {\n    const element = visibleImages.find(({ id }) => id === itemId);\n    setModalContent(modalContent => element.largeImageURL);\n  };\n\n  const getData = () => {\n   toggleLoading();\n   fetchImages(searchQuery, page, error).then(({ hits}) => {\n        setVisibleImages(visibleImages => [...visibleImages, ...hits]);\n        console.log({hits})  \n        handleScroll();\n        }).catch (error =>  setError(error))\n      .finally(() => toggleLoading()) \n  };\n\n  const isNotLastPage = visibleImages.length / page === 12;\n  const btnEnable = visibleImages.length > 0 && !isLoading && isNotLastPage;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={hadleChangeQuery} />\n\n        <ImageGallery\n          key={id}\n          images={visibleImages}\n          onClick={toggleModal}\n          onItemClick={modalContentSet}\n          name={`Load more`}\n        />\n\n        {openModal && (\n          <Modal content={modalContent} onBackdrop={toggleModal} />\n        )}\n        {isLoading && <Spinner />}\n        {btnEnable && <Button name=\"Load more\" onPress={handleNextPage} />}\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}