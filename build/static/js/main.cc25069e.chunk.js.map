{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","components/Searchbar/SearchBar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/Spinner/Spinner.js","services/apiServices.js","App.js","index.js"],"names":["module","exports","SearchBar","state","searchQuery","handleChange","event","currentTarget","name","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","s","Searchbar","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","onItemClick","id","webformatURL","src","alt","ImageGalleryItem_image","onClick","modalContent","ImageGallery","images","e","target","map","image","modalRoot","document","getElementById","propTypes","onBackdrop","PropTypes","func","isRequired","content","string","Modal","createPortal","Overlay","Button","onPress","Spinner","color","height","width","fetchImages","page","a","axios","get","catch","error","console","data","App","visibleImages","isLoading","openModal","toggleModal","toggleLoading","hadleChangeQuery","query","handleNextPage","handleScroll","window","scrollTo","top","documentElement","scrollHeight","behavior","modalContentSet","itemId","element","find","largeImageURL","getData","hits","log","prevProps","isNotLastPage","length","btnEnable","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cc25069e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CvRl\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__1P7Nb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__24ERy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"SearchBar_Searchbar__LuSsJ\",\"SearchForm\":\"SearchBar_SearchForm__1OsD8\",\"SearchForm_button\":\"SearchBar_SearchForm_button__1J8k8\",\"SearchForm_button_label\":\"SearchBar_SearchForm_button_label__1ewgv\",\"SearchForm_input\":\"SearchBar_SearchForm_input__1BDSj\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './SearchBar.module.css';\n\nclass SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    searchQuery: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchQuery } = this.state;\n    this.props.onSubmit(searchQuery);\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchForm_button}>\n            <span className={s.SearchForm_button_label}>Search</span>\n          </button>\n          <input\n            className={s.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"searchQuery\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n            value={searchQuery}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ onItemClick, id, webformatURL }) => {\n\nconst modalContent = id => {\n    onItemClick(id);\n  };\n\n    return (\n      <img\n        key={id}\n        src={webformatURL}\n        alt=\"\"\n        className={s.ImageGalleryItem_image}\n        onClick={() => modalContent(id)}\n      />\n    );\n}\n\n\nImageGalleryItem.propTypes = {\n  onItemClick: PropTypes.func.isRequired,\n  id: PropTypes.number.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nconst  ImageGallery = ({ images, onItemClick, onClick, id }) => {\n  const handleOpenModal = e => {\n    if (e.target !== e.currentTarget) {\n      onClick();\n    }\n  };\n  \n    return (\n      <ul className={s.ImageGallery} onClick={handleOpenModal}>\n        {images &&\n          images.map(image => (\n            <li key={id} className={s.ImageGalleryItem}>\n              <ImageGalleryItem {...image} onItemClick={onItemClick} />\n            </li>\n          ))}\n      </ul>\n    );\n}\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onItemClick: PropTypes.func.isRequired,\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\n\nimport s from './Modal.module.css';\n\nconst modalRoot = document.getElementById('modal-root');\n\nconst Modal = ({ onBackdrop, content }) => {\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onBackdrop();\n    }\n  };\n    return createPortal(\n      <div className={s.Overlay} onClick={handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={content} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n}\n\nmodalRoot.propTypes = {\n  onBackdrop: PropTypes.func.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onPress, name }) => {\n  \n    return (\n      <button type=\"button\" onClick={onPress} className={s.Button}>\n          {name}\n      </button>\n    );\n};\n\n\nButton.propTypes = {\n  name: PropTypes.string,\n  onPress: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport s from './Spinner.module.css';\n\nconst Spinner = () => {\n    return (\n      <div className={s.Spinner}>\n        <Loader type=\"Puff\" color=\"#00BFFF\" height={50} width={50} />\n      </div>\n    );\n}\n\nexport default Spinner;\n","import axios from 'axios';\n\nconst api = '16865907-bf97a2667d97724c7c41d2d46';\nconst url = 'https://pixabay.com/api/?';\n\nconst fetchImages = async (searchQuery, page) => {\n\n\n  const { data } = await axios.get(`${url}q=${searchQuery}&page=${page}&key=${api}&image_type=photo&orientation=horizontal&per_page=12`).catch(error => console.error('Smth went wrong'));\n  return data;\n};\n\nexport default fetchImages;\n","import React, { Component } from 'react';\n\nimport SearchBar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport Button from './components/Button/Button';\nimport Spinner from './components/Spinner/Spinner';\nimport fetchImages from './services/apiServices';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    modalContent: '',\n    searchQuery: '',\n    page: 1,\n    visibleImages: [],\n    isLoading: false,\n    openModal: false,\n    error: null,\n    id:''\n  };\n\n  componentDidUpdate(prevProps, { searchQuery, page }) {\n    if (searchQuery !== this.state.searchQuery) {\n      this.getData();\n    }\n\n    if (page !== this.state.page) {\n      this.getData();\n    }\n  }\n\n  toggleModal = () => {\n    this.setState(({ openModal }) => ({ openModal: !openModal }));\n  };\n\n  toggleLoading = () => {\n    this.setState(({ isLoading }) => ({ isLoading: !isLoading }));\n  };\n\n  hadleChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      visibleImages: [],\n    });\n  };\n\n  handleNextPage = () => {\n    this.setState(({ page }) => {\n      return {\n        page: page + 1,\n      };\n    });\n  };\n\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  modalContentSet = itemId => {\n    const { visibleImages } = this.state;\n    const element = visibleImages.find(({ id }) => id === itemId);\n    this.setState({ modalContent: element.largeImageURL });\n  };\n\n  getData = async () => {\n    const { searchQuery, page } = this.state;\n    this.toggleLoading();\n    try {\n      const {hits} = await fetchImages(searchQuery, page);\n        this.setState(({ visibleImages }) => {\n          console.log(hits)\n          return { visibleImages: [...visibleImages, ...hits] };\n        });\n        this.handleScroll()\n      }catch (error){ \n        console.log('Smth wrong with App fetch', error);\n      } finally{\n        this.toggleLoading()}\n  };\n\n  render() {\n    const { visibleImages, openModal, modalContent, isLoading, page, id} =\n      this.state;\n    const isNotLastPage = visibleImages.length / page === 12;\n    const btnEnable = visibleImages.length > 0 && !isLoading && isNotLastPage;\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.hadleChangeQuery} />\n\n        <ImageGallery\n          key={id}\n          images={visibleImages}\n          onClick={this.toggleModal}\n          onItemClick={this.modalContentSet}\n          name={`Load more`}\n        />\n\n        {openModal && (\n          <Modal content={modalContent} onBackdrop={this.toggleModal} />\n        )}\n        {isLoading && <Spinner />}\n        {btnEnable && <Button name=\"Load more\" onPress={this.handleNextPage} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}